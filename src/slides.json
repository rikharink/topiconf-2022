[
  {
    "text": [
      "So you want to build a tiny game?",
      { "text": "a fictitious js13k game jam journey", "relativeScale": 0.8 },
      "",
      "[CLICK TO START]"
    ],
    "background": ["#F19A13", "#E74043", "#982A7C", "#00A0E3"]
  },
  {
    "text": [
      { "text": "13 JULY 2022 13:00 CEST", "relativeScale": 1.2 },
      "you hear about a game jam called js13k",
      "it starts in exactly one month"
    ],
    "background": ["#F19A13", "#E74043", "#982A7C", "#00A0E3"]
  },
  {
    "text": ["OKAY BUT WHAT IS JS13K?"],
    "textColor": [0.906, 0.251, 0.263, 1]
  },
  {
    "text": [
      "A GAME JAM FOR HTML5 GAME DEVELOPERS???",
      "WITH A SIZE RESTRICTION TWIST‽‽‽‽‽‽‽‽‽",
      "-._.-._.-WhAt DoEs ThIs AlL MeAn-._.-._.-"
    ],
    "textColor": [0.906, 0.251, 0.263, 1]
  },
  {
    "text": ["Please calm down,", "I'll explain it to you..."],
    "textAlignment": "Left",
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": ["¿¿¿WHO IS THIS???", "¡¡¡WHAT VOICE AM I HEARING!!!"],
    "textColor": [0.906, 0.251, 0.263, 1]
  },
  {
    "text": ["(¬_¬)..."],
    "textAlignment": "Left",
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": "Oh...",
    "textColor": [0.906, 0.251, 0.263, 1]
  },
  {
    "text": "Sorry...",
    "textColor": [0.906, 0.251, 0.263, 1]
  },
  {
    "text": ["I got a bit carried away..."],
    "textColor": [0.906, 0.251, 0.263, 1]
  },
  {
    "text": "I'll calm down...",
    "textColor": [0.906, 0.251, 0.263, 1]
  },
  {
    "text": ["BUT DO TELL ME MORE!"],
    "textColor": [0.906, 0.251, 0.263, 1]
  },
  {
    "text": [
      "Hi, I'm Rik               （＾∀＾●）ﾉｼ ",
      "I love making stuff        (ღ˘⌣˘ღ)",
      "Mostly fun computer stuff  (｡◕‿◕｡)"
    ],
    "textAlignment": "Left",
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": ["e-mail: rik@har.ink", "github: @rikharink"],
    "textAlignment": "Left",
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": [
      "I meant about the JS13K game jam,",
      "like how to build tiny games and stuff,",
      "but nice to meet you"
    ],
    "textColor": [0.906, 0.251, 0.263, 1]
  },
  {
    "text": [
      "Oh, of course",
      "let's start with the basics",
      "",
      { "text": "THE RULES", "relativeScale": 1.5 }
    ],
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": ["package size <= 13 KiB", "(13 * 1024 bytes)"],
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": ["has to run in", "the latest Firefox and Chrome"],
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": "new content only",
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": [
      "use the main theme",
      "(announced at the start of the jam)",
      "you will be judged on this"
    ],
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": ["team size is not restricted", "(the prize pool is)"],
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": ["there are several categories", "games can join more than one"],
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": [
      { "text": "13 JULY 2022 13:13 CEST", "relativeScale": 1.2 },
      "LET'S PREPARE"
    ],
    "background": ["#F19A13", "#E74043", "#982A7C", "#00A0E3"]
  },
  {
    "text": [
      "“He who is best prepared",
      " can best serve his moment",
      " of inspiration.”",
      "",
      { "text": "― Samuel Taylor Coleridge", "relativeScale": 0.8 }
    ],
    "textAlignment": "Left",
    "background": ["#00A0E3"],
    "textColor": [1, 1, 1, 1],
    "haloColor": [0, 0, 0, 1]
  },
  {
    "text": [
      "“Why not seize the pleasure at once?",
      " How often is happiness destroyed",
      " by preparation, foolish preparation!”",
      "",
      { "text": "― Jane Austen, Emma", "relativeScale": 0.8 }
    ],
    "textAlignment": "Left",
    "background": ["#E74043"],
    "textColor": [1, 1, 1, 1],
    "haloColor": [0, 0, 0, 1]
  },
  {
    "text": [
      "$ mkdir js13k-2022",
      "$ cd js13k-2022",
      "$ git init",
      "$ npm init",
      "$ mkdir src",
      "$ touch src/index.html",
      "$ touch src/index.ts",
      "$ touch src/style.css",
      "$ git commit -am \"let's build a tiny game!\""
    ],
    "textAlignment": "Left",
    "textColor": [0, 1, 0, 1],
    "haloColor": [0, 0, 0, 1],
    "background": ["#000000"]
  },
  {
    "text": ["Hmmmm... now what?"],
    "textColor": [0.906, 0.251, 0.263, 1]
  },
  {
    "text": [
      { "text": "13 JULY 2022 13:15 CEST", "relativeScale": 1.2 },
      "you start building",
      "a tiny game framework"
    ],
    "background": ["#F19A13", "#E74043", "#982A7C", "#00A0E3"]
  },
  {
    "text": ["Let's setup", "a canvas to draw on"],
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": [
      {
        "text": "<canvas id='g' width=1280 height=720></canvas>",
        "relativeScale": 0.5
      }
    ],
    "canvasSceneId": "c1"
  },
  {
    "text": [
      {
        "text": "const canvas = document.getElementById('g');",
        "relativeScale": 0.5
      },
      {
        "text": "const ctx = canvas.getContext('2d');",
        "relativeScale": 0.5
      },
      {
        "text": "ctx.fillStyle = '#F19A13';",
        "relativeScale": 0.5
      },
      {
        "text": "ctx.fillRect(p.pos[0], p.pos[1], p.size[0], p.size[1]);",
        "relativeScale": 0.5
      }
    ],
    "textAlignment": "Left",
    "canvasSceneId": "c2"
  },
  {
    "text": ["Now we'll setup the game loop"],
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": [
      {
        "text": "let dt = 5;",
        "relativeScale": 0.5
      },
      {
        "text": "let then = 0; let accumulator = 0;",
        "relativeScale": 0.5
      },
      {
        "text": "let raf = requestAnimationFrame(loop);",
        "relativeScale": 0.5
      },
      { "text": "", "relativeScale": 0.5 },
      { "text": "function loop(now: number) {", "relativeScale": 0.5 },
      { "text": "  raf = requestAnimationFrame(loop);", "relativeScale": 0.5 },
      { "text": "  let ft = now - then;", "relativeScale": 0.5 },
      { "text": "  if(ft > 1000) {", "relativeScale": 0.5 },
      { "text": "    then = now; return;", "relativeScale": 0.5 },
      { "text": "  }", "relativeScale": 0.5 },
      { "text": "  accumulator += ft;", "relativeScale": 0.5 },
      { "text": "  while(accumulator >= dt) {", "relativeScale": 0.5 },
      { "text": "    //DO FIXED STEP STUFF", "relativeScale": 0.5 },
      { "text": "    doPhysics(dt)", "relativeScale": 0.5 },
      { "text": "    accumulator -= dt;", "relativeScale": 0.5 },
      { "text": "  }", "relativeScale": 0.5 },
      { "text": "  let t = accumulator / dt;", "relativeScale": 0.5 },
      { "text": "  //DO VARIABLE STEP STUFF", "relativeScale": 0.5 },
      { "text": "  render(t);", "relativeScale": 0.5 },
      { "text": "}", "relativeScale": 0.5 }
    ],
    "textAlignment": "Left"
  },
  {
    "text": [
      "Okay now I'll sprinkle on some",
      "❇❇❇ SEMI-IMPLICIT EULER ❇❇❇",
      "for some awesome",
      "❇❇❇ PHYSICS ❇❇❇"
    ],
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": [
      {
        "text": "function doPhysics(dt: number) {",
        "relativeScale": 0.4
      },
      {
        "text": "  p.acceleration = GRAVITY",
        "relativeScale": 0.4
      },
      {
        "text": "  let acceleration = scale([0, 0], p.acceleration, dt);",
        "relativeScale": 0.4
      },
      {
        "text": "  add(p.velocity, p.velocity, acceleration);",
        "relativeScale": 0.4
      },
      {
        "text": "  add(p.pos, p.pos, scale([0, 0], po.velocity, dt));",
        "relativeScale": 0.4
      },
      {
        "text": "}",
        "relativeScale": 0.4
      }
    ],
    "textAlignment": "Left",
    "canvasSceneId": "c3"
  },
  {
    "text": ["Whoops forgot to implement collisions", "let's fix that..."],
    "textColor": [0, 0.627, 0.89, 1]
  },
  {
    "text": [
      {
        "text": "function doPhysics(dt: number) {",
        "relativeScale": 0.4
      },
      {
        "text": "  p.acceleration = GRAVITY;",
        "relativeScale": 0.4
      },
      {
        "text": "  p.velocity = add(p.velocity, scale(p.acceleration, dt));",
        "relativeScale": 0.4
      },
      {
        "text": "  p.pos = add(p.pos, scale(po.velocity, dt));",
        "relativeScale": 0.4
      },
      {
        "text": "  doCollisions();",
        "relativeScale": 0.4
      },
      {
        "text": "}",
        "relativeScale": 0.4
      }
    ],
    "textAlignment": "Left",
    "canvasSceneId": "c4"
  },
  {
    "text": ["THE MIGHTY FLAPPY SQUARE OF DEATH"],
    "canvasSceneId": "FLAPPYSQUARE"
  }
]
